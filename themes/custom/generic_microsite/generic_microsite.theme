<?php
/**
 * @file
 * Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */
use Drupal\bootstrap\Bootstrap;
use Drupal\file\Entity\File;
use Drupal\image\Entity\ImageStyle;

/**
 * Implements TEMPLATE_preprocess_html().
 */
function generic_microsite_preprocess_html(&$variables) {
  $site_name_raw = \Drupal::configFactory()->getEditable('system.site')->get('name');
  $site_name = preg_replace('/[^A-Za-z0-9\-]/', ' ', $site_name_raw);
  $variables['site_name'] = strtolower(str_replace(" ", "-", $site_name));

  if (theme_get_setting('global_style', 'generic_microsite') != NULL) {
    $variables['#attached']['library'][] = 'generic_microsite/global-styling' . theme_get_setting('global_style', 'generic_microsite');
    $variables['global_style'] = theme_get_setting('global_style', 'generic_microsite');
  }
  else {
    $variables['#attached']['library'][] = 'generic_microsite/global-styling1';
    $variables['global_style'] = 1;
  }

  if (theme_get_setting('frontpage_template', 'generic_microsite') != NULL) {
    $variables['frontpage_template'] = theme_get_setting('frontpage_template', 'generic_microsite');
  }
  else {
    $variables['frontpage_template'] = 1;
  }

   if (theme_get_setting('frontpage_template', 'generic_microsite') == 2) {
     $variables['attributes']['class'][] = 'tl-one-sidebar';
   }
   else {
    $variables['attributes']['class'][] = 'tl-no-sidebars';
   }
  // The getRawParameter will return the node id.
  $id = \Drupal::routeMatch()->getRawParameter('node');
  $variables['node_id'] = "node-id-" . $id;
}

/**
 * Implements TEMPLATE_preprocess_field().
 */
function generic_microsite_preprocess_field(&$variables, $hook) {
  if ($variables['field_name'] == 'field_accordion_item') { 
    $variables['attributes']['id'][]='accordion';
    foreach ($variables['items'] as $key => $item) {
      $image = $item['content']['#field_collection_item']->get('field_image')->getValue();
      if(isset($image['0'])) {
        $file_id = $image['0']['target_id'];
        $file = File::load($file_id);
        $variables['accordeon_image'][$file_id] = ImageStyle::load('accordion_image')->buildUrl($file->getFileUri());
      }
    }
  }
  
  if ($variables['field_name'] == 'field_slide') {
    $slide_type = $variables['element']['#object']->get('field_slide_type')->getValue();
    if($slide_type[0]['value'] == 0) {
      foreach ($variables['items'] as $key => $item) {
        $image = $item['content']['#field_collection_item']->get('field_image')->getValue();
        if(isset($image['0'])) {
          $file_id = $image['0']['target_id'];
          $file = File::load($file_id);
          $variables['slideshow_image_path'][$file_id] = ImageStyle::load('slideshow')->buildUrl($file->getFileUri());
        }
      }
    } else {
      foreach ($variables['items'] as $key => $item) {
        $image = $item['content']['#field_collection_item']->get('field_image')->getValue();
        if(isset($image['0'])) {
          $file_id = $image['0']['target_id'];
          $file = File::load($file_id);
          $variables['slideshow_image_path'][$file_id] = ImageStyle::load('slideshow_block')->buildUrl($file->getFileUri());
        }
      }
    }
  }

  if ($variables['field_name'] == 'field_slide_type') {
    $variables['items'][0]['content']['#markup'] = '';
  }

  if ($variables['field_name'] == 'field_show_arrows') {
    if ($variables['element'][0]['#markup'] == 'Show arrows') {
      $variables['items'][0]['content']['#markup'] = '<a class="left carousel-control" href="#slideshow" role="button" data-slide="prev">
      <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
      </a>
      <a class="right carousel-control" href="#slideshow" role="button" data-slide="next">
      <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
      </a>';
    } else {
      $variables['items'][0]['content']['#markup'] = '';
    }
  }

  if ($variables['field_name'] == 'field_form') {
    $id = $variables['items'][0]['content']['#plain_text'];
    $contact_form = \Drupal::entityManager()
      ->getStorage('contact_form')
      ->load($id);

    $message = \Drupal::entityManager()
      ->getStorage('contact_message')
      ->create(array(
        'contact_form' => $id
      ));

    $form = \Drupal::service('entity.form_builder')->getForm($message);
    
    unset($variables['items'][0]['content']['#plain_text']);
    $variables['items'][0]['content']['#suffix'] = drupal_render($form);
  }
}

/**
 * Implements hook_theme_suggestions_alter.
 */
function generic_microsite_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {
$is_front = \Drupal::service('path.matcher')->isFrontPage();
  if (($is_front) && in_array($hook, array('page'))) {
    if (theme_get_setting('frontpage_template', 'generic_microsite') == 1) {
      $suggestions[] = 'page__front__onecolumn';
    }
    else {
      $suggestions[] = 'page__front__twocolumn';
    }
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function generic_microsite_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $content_type = $node->bundle();
    if ($content_type == 'form') {
      $id = $node->id();
      $layout = $node->field_layout->value;
      if ($layout == 0) {
        $suggestions[] = 'page__form__landingform';
      }
      else {
        $suggestions[] = 'page__form__contactform';	  
      } 
    }
  }
}

/**
 * Implements hook_theme_preprocess_page().
 */
function generic_microsite_preprocess_page(&$variables) {
  if (isset($variables['node'])) {
    $node_type = $variables['node']->get('type')->getValue();
    if (($node_type[0]['target_id'] == 'page') && ($node_type[0]['target_id'] == 'form')) {
      $footer_image = $variables['node']->get('field_footer_image')->getValue();
      if (isset($footer_image[0])) {
        $file_id = $footer_image[0]['target_id'];
        $file = File::load($file_id);
        $variables['footer_background_image'][$file_id] = ImageStyle::load('footer_image')->buildUrl($file->getFileUri());
      }
    }
  }

  // Set gradient background colors
  if (theme_get_setting('bg_value1', 'generic_microsite') != NULL) {
    $variables['bg_value1'] = theme_get_setting('bg_value1', 'generic_microsite');
  }
  else {
    $variables['bg_value1'] = '#b5cbe6';
  }

  $variables['bg_value2'] = theme_get_setting('bg_value2', 'generic_microsite');

  $variables['custom_css'] = theme_get_setting('custom_css', 'generic_microsite');

  if (theme_get_setting('bg_value2', 'generic_microsite') != NULL) {
   $variables['gradient_bg'] = 'background: -webkit-gradient(linear,left top,left bottom,from(' . theme_get_setting('bg_value1', 'generic_microsite') . '),to(' . theme_get_setting('bg_value2', 'generic_microsite') . ')) no-repeat; background: -webkit-linear-gradient(top,' . theme_get_setting('bg_value1', 'generic_microsite') . ',' . theme_get_setting('bg_value2', 'generic_microsite') . ') no-repeat; background: -moz-linear-gradient(top,' . theme_get_setting('bg_value1', 'generic_microsite') . ',' . theme_get_setting('bg_value2', 'generic_microsite') . ') no-repeat; background: -ms-linear-gradient(top,' . theme_get_setting('bg_value1', 'generic_microsite') . ',' . theme_get_setting('bg_value2', 'generic_microsite') . ') no-repeat; background: -o-linear-gradient(top,' . theme_get_setting('bg_value1', 'generic_microsite') . ',' . theme_get_setting('bg_value2', 'generic_microsite') . ') no-repeat;';
  }
  else if (theme_get_setting('bg_value1', 'generic_microsite') != NULL) {
    $variables['gradient_bg'] = 'background-color: ' . theme_get_setting('bg_value1', 'generic_microsite') . ';';
  }
  else {
    $variables['gradient_bg'] = 'background-color: #b5cbe6;';
  }
}

function generic_microsite_preprocess_paragraph(&$variables) {
  $is_front = \Drupal::service('path.matcher')->isFrontPage();
  $variables['is_front'] = $is_front;
}

function generic_microsite_preprocess_breadcrumb(&$variables) {
  $site_name = \Drupal::configFactory()->getEditable('system.site')->get('name');
  $variables['breadcrumb'][0]['text'] = $site_name;
  $variables['breadcrumb']['custom']['text'] = 'You are here : ';
  array_unshift($variables['breadcrumb'],$variables['breadcrumb']['custom']);
  unset($variables['breadcrumb']['custom']);
}

/**
 * Implements template_preprocess_block().
 */
function generic_microsite_preprocess_block(&$variables) {
  if ($variables['base_plugin_id'] == 'language_block') {
    $variables['label'] = t('Pick your language');
  }
}

/**
 * Implements hook_form_FORM_ID_form_alter().
 */
function generic_microsite_form_search_block_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  $form['#suffix'] = '<a href="search" class="advanced-search">' . t('Advanced search'). '</a>';
}
