<?php

/**
 * @file
 * Allow configuring and hiding fields from node forms via theme configuration.
 */

use Drupal\Core\Access\AccessResultForbidden;
use Drupal\Core\Access\AccessResultNeutral;
use Drupal\Core\Field\FieldDefinitionInterface;
use Drupal\Core\Field\FieldItemListInterface;
use Drupal\Core\Session\AccountInterface;

/**
 * Implements hook_entity_field_access().
 */
function theme_content_structure_restrict_entity_field_access($operation, FieldDefinitionInterface $field_definition, AccountInterface $account, FieldItemListInterface $items = NULL) {

  $config = \Drupal::config('system.theme');
  $default_theme = $config->get('default');

  // Get the list of fields, which should be hidden.
  $fields_to_restrict = theme_get_setting('theme_content_structure_restrict_fields', $default_theme);

  // If no fields are detected initialise the array.
  if (empty($fields_to_restrict)) {
    $fields_to_restrict = array();
  }

  $field_name = $field_definition->getName();

  if (in_array($operation, array('edit', 'created')) && in_array($field_name, $fields_to_restrict)) {
    return new AccessResultForbidden();
  }

  return new AccessResultNeutral();
}

/**
 * Implements hook_ENTITYTPE_node_create_access().
 */
function theme_content_structure_restrict_node_create_access($account, array $context, $entity_bundle) {

  $config = \Drupal::config('system.theme');
  $default_theme = $config->get('default');

  // Get the list of content types that should be hidden.
  $cts_to_restrict = theme_get_setting('theme_content_structure_restrict_cts', $default_theme);

  // If no content types are defined, then just initialise the array.
  if (empty($cts_to_restrict)) {
    $cts_to_restrict = array();
  }

  if (in_array($entity_bundle, $cts_to_restrict)) {
    return new AccessResultForbidden();
  }

  return new AccessResultNeutral();
}
