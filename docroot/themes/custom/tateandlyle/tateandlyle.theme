<?php

/**
 * @file
 * Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */

use Drupal\Component\Utility\Html;

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form templates.
 */
function tateandlyle_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  if (isset($variables['elements']['content']['#block_content'])) {
    array_splice($suggestions, 1, 0, 'block__bundle__' . $variables['elements']['content']['#block_content']->bundle());
  }
}

/**
 * Implements template_preprocess_block().
 */
function tateandlyle_preprocess_block(&$variables) {
  // Custom block type helper classes.
  if (isset($variables['elements']['content']['#block_content'])) {
    $block = $variables['elements']['content']['#block_content'];
    $bundle = $variables['elements']['content']['#block_content']->bundle();

    $bundle_class = str_replace('_', '-', $bundle);
    if (isset($variables['attributes']['class'])) {
      $variables['attributes']['class'] = Html::cleanCssIdentifier('block--' . $bundle_class);
      $variables['attributes']['data-bundle-class'] = $bundle_class;
    }

    // Call preprocessor function of different block types.
    $preproces_block_list = array('single_item_promo', 'talk_to_us', 'banner');
    if (in_array($bundle, $preproces_block_list)) {
      include_once "preprocess/block.inc";
      $variables = call_user_func("tal_preprocess_block_" . $bundle, $variables, $block);
    }
  }
}

/**
 * Implements hook_preprocess_paragraph().
 */
function tateandlyle_preprocess_paragraph(&$variables) {
  $bundle = $variables['paragraph']->getType();
  if ($bundle == 'talk_to_us') {
    $contact = $variables['paragraph']->get('field_ttu_contact')->referencedEntities();
    if (!empty($contact)) {
      $variables['field_ttu_contact_phone'] = $contact[0]->get('field_phone_number')->value;
      $variables['field_ttu_contact_title'] = $contact[0]->label();
    }
    else {
      $variables['field_ttu_contact_phone'] = '';
      $variables['field_ttu_contact_title'] = '';
    }
    $variables['field_button_text'] = $variables['paragraph']->get('field_button_text')->value;
    $variables['field_or_link_text'] = $variables['paragraph']->get('field_or_link_text')->value;
    $variables['field_simple_text'] = $variables['paragraph']->get('field_simple_text')->value;
    $variables['field_ttu_link_text'] = $variables['paragraph']->get('field_ttu_link_text')->value;
    $variables['field_ttu_or_button'] = $variables['paragraph']->get('field_ttu_or_button')->value;
  }
}

/**
 * Implements hook_preprocess_HOOK() for the page title template.
 */
function tateandlyle_preprocess_page_title(&$variables) {
  $node = \Drupal::routeMatch()->getParameter('node');
  if ($node && $node->bundle() == 'ingredient') {
    $hide = $node->get('field_hide_title')->value;
    if ($hide == '1') {
      $variables['title_attributes']['class'][] = 'hide';
    }
  }
}
